@inherits ViewPage

@{
    Layout = "SimpleLayout";
    ViewBag.Title = "Afterglow";
    var session = Request.GetSession();
}
<script type="text/javascript">
    var agSessionId = null;
</script>
@if (session != null && session.IsAuthenticated)
{
<script type="text/javascript">
    agSessionId = @session.Id;
</script>
}

<script type="text/javascript">
    angular.module('jqmDirectives', [])
    .directive('refreshList', function () {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                $(element).closest(':jqmData(role=listview)').listview('refresh');
            }
        };
    });
    var logTemplate = {};
    var installedPluginTemplate = {};
    var lightPreviewTemplate = {};

    // Apply UI
    $(function () {

        $("#startStopBtn").button();
        $("#logoutBtn").button();
//        $('#previewAndSettings').accordion();
//        $("#previewAndSettings").accordion({
//            'fillSpace': true,
//            'clearStyle': true
//        });
        
        //Get Templates
        logTemplate = _.template($('#logTemplate').html());
      //  installedPluginTemplate = _.template($('#installedPluginTemplate').html());
        lightPreviewTemplate = _.template($('#lightPreviewTemplate').html());

        if (agSessionId) {
            $('#logout').show();
        } else {
			// Temporarily disabled login
            //$('#login').show();
        }

        $(document).ajaxError(function (event, jqXHR, settings, thrownError) {
            var response = $.parseJSON(jqXHR.responseText);
            var msg = "Ajax error";
            if (response && response.ResponseStatus) {
                msg = "<pre>" + response.ResponseStatus.Message + "\r\n" + response.ResponseStatus.StackTrace + "</pre>";
            } else if (thrownError) {
                msg = thrownError;
            }
            $("#log").html(logTemplate({ title: "Error", message: msg }));
        });

        



    });

    function DoLogin() {
        var req = $.post('/auth/credentials?format=json', $('#login').serialize(),
        function (data, textStatus, jqXHR) {
            agSessionId = data.SessionId;
            //$('#login').hide();
            //$('#loggedIn').show();
        }, 'json');
    }

    function DoLogout() {
        $.get('/auth/logout?format=json', null, function (data, textStatus, jqXHR) {
            //$('#login').show();
            //$('#loggedIn').hide();
            agSessionId = null;
            if (timer)
                clearInterval(timer);
        }, 'json');
    }
    
    var timer = null;

    function DoStartStop() {
        $.post('/runtime?format=json', {},
        function (data, textStatus, jqXHR) {
            afterglowRuntime = data;
            $('#startStopBtn').html(afterglowRuntime.Active ? 'Stop' : 'Start');

            if (afterglowRuntime.Active) {
                timer = setInterval(getPreview, 100);
            } else {
                clearInterval(timer);
                timer = null;
            }
        }, 'json');
    }
    
    var firstPreview = true;
    function getPreview() {

        $.get("/preview?format=json", {}, function (data, status, xhr) {
            clearInterval(timer);
            timer = null;
            if (firstPreview) {
				lightPreviewTemplate = _.template($('#lightPreviewTemplate').html());
                var lights = "";
                $(data.Lights).each(function (index, item) {
                    $("#previewScreen").append(lightPreviewTemplate({ index: item.Index, colour: "#" + item.Colour.R.toString(16) + item.Colour.G.toString(16) + item.Colour.B.toString(16) }));
                });
                //$("#previewScreen").html();
                firstPreview = false;
            }
            else {
                $(data.Lights).each(function (index, item) {
                    $("#lightPreview" + item.Index).css("background-color", "#" + item.Colour.R.toString(16) + item.Colour.G.toString(16) + item.Colour.B.toString(16));
                });
            }
            timer = setInterval(getPreview, 100);
        });
        
    }

    function AfterglowCtrl($scope, $http) {
        $scope.afterglowSetup = null;
        $scope.currentProfile = null;
        $scope.pluginType = null;

        $http.get('/setup?format=json').success(function (data) {
            $scope.afterglowSetup = data;
        });
        $http.get('/runtime?format=json').success(function (data) {
            $scope.afterglowRuntime = data;
        });
        
        $scope.save = function () {
            $http.post('/setup?format=json', $scope.afterglowSetup).success(function (data) {
                $scope.afterglowSetup = data;
            });
        }

        $scope.selectProfile= function(profile, pluginType){
            $scope.currentProfile = profile;
            $scope.pluginType = pluginType;
        }

        $scope.updateProfile = function (plugin){
            if ($scope.currentProfile == null || plugin == null) {
                return;
            }
            
            var data = {profileId: $scope.currentProfile.Id, pluginId: plugin.Id, pluginType: $scope.pluginType, actionType: 'add'};
            $http.post('/updateProfile?format=json', data).success( function( data){
                $scope.afterglowSetup = data;
            });
        }

        $scope.removePluginFromProfile = function (profile, pluginType, plugin){
            if (profile == null || plugin == null) {
                return;
            }
            var data = {profileId: profile.Id, pluginId: plugin.Id, pluginType: pluginType, actionType: 'remove'};
            $http.post('/updateProfile?format=json', data).success( function( data){
                $scope.afterglowSetup = data;
            });
        }
    }
    //look at this http://stackoverflow.com/questions/13836765/angular-scope-inside-script
    var currentProfile = null;
    function TrySetLightSetupPlugin(plugin) {
        if (currentProfile == null || plugin == null) {
            return;
        }
    }

</script>

<div ng-controller="AfterglowCtrl">
<div data-role="page" class="type-interior" id="mainContent">

	<div data-role="header" data-theme="e">
		<h1>Afterglow</h1>
	</div><!-- /header -->

    <div data-role="content" >
		<div class="content-primary">

            <form id="login" method="post" action="#" onsubmit="DoLogin(); return false;" style="display:none;">
                <label for="UserName">User name: </label><input type="text" name="UserName" id="UserName" /><br />
                <label for="Password">Password: </label><input type="password" name="Password" id="Password" /><br />
                @*<label for="RememberMe">Remember me: </label><input type="checkbox" name="RememberMe" checked="checked" />*@
            <input type="submit" value="Login" onclick="DoLogin(); return false;" />
            </form>
            <div id="loggedIn" >
                <div id="StartStop">
                    <button onclick="DoStartStop();" id="startStopBtn" style="width:100%">Start</button>
                </div>
                <div id="logout">
                    <button onclick="DoLogout();" id="logoutBtn" style="width:100%">Logout</button>
                </div>
            </div>

            <div data-role="collapsible-set"  data-theme="b" data-content-theme="c" class="ui-collapsible-set">
            <div data-role="collapsible" data-collapsed="true">
                <h3 class="ui-collapsible-heading">
                    Preview
                </h3>
                <div id="previewScreen">
                    
                </div>
            </div>
            <div data-role="collapsible" data-collapsed="false">
                <h3 class="ui-collapsible-heading">
                    Settings
                </h3>
                <div id="settings">
                    <h2>Installed Plugin Types</h2>
                    <div id="installedPlugins" >
                        <div data-role="collapsible-set"  data-theme="b" data-content-theme="c" class="ui-collapsible-set">
                            <div data-role="collapsible" data-collapsed="true" id="installedLightSetupPlugins">
                                <h3 class="ui-collapsible-heading">
                                    Light Setup Plugins
                                </h3>
                                <div class="ui-collapsible-content" aria-hidden="false" ng-repeat="plugin in afterglowSetup.Setup.AvailableLightSetupPlugins">
                                    {{plugin}}
                                </div>
                            </div>
                            <div data-role="collapsible" data-collapsed="true" id="installedCapturePlugins">
                            <h3 class="ui-collapsible-heading">
                                Capture Plugins
                            </h3>
                            <div class="ui-collapsible-content" aria-hidden="false" ng-repeat="plugin in afterglowSetup.Setup.AvailableCapturePlugins">
                                {{plugin}}
                            </div>
                        </div>
                        <div data-role="collapsible" data-collapsed="true" id="installedPostProcessPlugins">
                            <h3 class="ui-collapsible-heading">
                                Post Process Plugins
                            </h3>
                            <div class="ui-collapsible-content" aria-hidden="false" ng-repeat="plugin in afterglowSetup.Setup.AvailablePostProcessPlugins">
                                {{plugin}}
                            </div>
                        </div>
                        <div data-role="collapsible" data-collapsed="true" id="installedOutputPlugins">
                            <h3 class="ui-collapsible-heading">
                                Output Plugins
                            </h3>
                            <div class="ui-collapsible-content" aria-hidden="false" ng-repeat="plugin in afterglowSetup.Setup.AvailableOutputPlugins">
                                {{plugin}}
                            </div>
                        </div>
                        </div>
                    </div>
                    <h2>Configured Plugins</h2>
                    <div id="configuredPlugins">
                        <div data-role="collapsible-set" data-theme="b" data-content-theme="d">
                            <div data-role="collapsible" id="configuredLightSetupPlugins">
                                <h3>
                                    Light Setup Plugins
                                </h3>
                                <ul data-role="listview">
                                    <li><button onclick="alert('bo');" data-theme="e" data-icon="plus" data-mini="true" data-inline="true" >Add</button></li>
                                    <li ng-repeat="plugin in afterglowSetup.Setup.ConfiguredLightSetupPlugins" data-refresh-list><a href="index.html">{{plugin.Name + " - " + plugin.DisplayName}}<span class="ui-li-count">88</span></a></li>
                                </ul>
                            </div>
                            <div data-role="collapsible" id="configuredCapturePlugins">
                                <h3>
                                    Capture Plugins
                                </h3>
                                <ul data-role="listview">
                                    <li class="ui-collapsible-content" ng-repeat="plugin in afterglowSetup.Setup.ConfiguredCapturePlugins" data-refresh-list><a href="index.html">{{plugin.Name + " - " + plugin.DisplayName}}<span class="ui-li-count">88</span></a></li>
                                </ul>
                            </div>
                            <div data-role="collapsible" id="configuredPostProcessPlugins">
                                <h3>
                                    Post Process Plugins
                                </h3>
                                <ul data-role="listview">
                                    <li class="ui-collapsible-content" ng-repeat="plugin in afterglowSetup.Setup.ConfiguredPostProcessPlugins" data-refresh-list><a href="index.html">{{plugin.Name + " - " + plugin.DisplayName}}<span class="ui-li-count">88</span></a></li>
                                </ul>
                            </div>
                            <div data-role="collapsible" id="configuredOutputPlugins">
                                <h3>
                                    Output Plugins
                                </h3>
                                <ul data-role="listview">
                                    <li class="ui-collapsible-content" ng-repeat="plugin in afterglowSetup.Setup.ConfiguredOutputPlugins" data-refresh-list><a href="index.html">{{plugin.Name + " - " + plugin.DisplayName}}<span class="ui-li-count">88</span></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    @Html.Partial("ProfilesView")
                </div>
            </div>
        </div>
        </div>
    </div><!-- /content -->
</div>
    
@Html.Partial("ProfilesPopupsView")

<div id="log"></div>

</div> <!-- Controller Scope -->

<script id="logTemplate" type="text/template">
	<div class="ui-state-error ui-corner-all" style="padding: 0 .7em;">
		<p><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span>
		<strong><%= title %>:</strong> <%= message %></p>
	</div>
</script>

<script id="lightPreviewTemplate" type="text/template">
    <span id="lightPreview<%= index %>" style="float: left; display: block;background-color: <%= colour %>; width:10px; height:10px"></span>
</script>